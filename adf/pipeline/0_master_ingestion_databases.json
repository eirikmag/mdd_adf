{
	"name": "0_master_ingestion_databases",
	"properties": {
		"description": "Job that loads metadata on tables from watermark table and lands and bronzes to delta-files",
		"activities": [
			{
				"name": "get_table_list",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT [source_table_id]\n      ,[source_SQL_keyvault_connection_string]\n      ,[source_db_name]\n      ,[source_schema_name]\n      ,[source_table_name]\n      ,[source_load_type]\n      ,[source_pk_columns]\n      ,[source_select_columns]\n      ,[source_watermark_column]\n      ,[source_load_frequency]\n      ,[source_is_active]\n      ,[destination_landing_watermark]\n      ,[destination_bronzing_watermark]\n      ,[last_etl_timestamp]\n      ,[last_pipeline_run_id]\n      ,[current_pipeline_run_id]\n  FROM [dbo].[watermark_table]\nWHERE source_is_active = 1\nAND current_pipeline_run_id is null\n;\nUPDATE [dbo].[watermark_table]\nSET current_pipeline_run_id = '@{pipeline().RunId}'\nWHERE source_is_active = 1\nAND current_pipeline_run_id is null",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "watermark_table",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "land_for_each_table",
				"description": "copy activity for all tables from get_table_list -step",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "get_table_list",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get_table_list').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 10,
					"activities": [
						{
							"name": "landing",
							"type": "Switch",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@item().source_load_type",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "Full",
										"activities": [
											{
												"name": "1_land_data_full",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "1_land_data_full_autoloader",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true
												}
											}
										]
									},
									{
										"value": "Delta",
										"activities": [
											{
												"name": "1_land_data_delta",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "1_land_data_delta_autoloader",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true
												}
											}
										]
									},
									{
										"value": "OneTime",
										"activities": [
											{
												"name": "1_land_data_one_time",
												"description": "if we want to land data just once. never do a full load or a delta load again, we invoke this pipeline.",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "1_land_data_delta_autoloader",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true
												}
											}
										]
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "get_landed_tables",
				"description": "redo query to get list of all successfully landed tables.",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "land_for_each_table",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT [source_table_id] ,[source_table_name] ,[source_schema_name] ,[source_table_name] ,[source_load_type] ,[source_watermark_column] ,[source_pk_columns] ,[destination_landing_watermark] ,[destination_bronzing_watermark] ,[source_is_active] ,[last_etl_timestamp] ,[source_select_columns] \n    FROM [dbo].[watermark_table] \nWHERE [last_pipeline_run_id] = '@{pipeline().RunId}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "watermark_table",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "reset_current_pipeline_id",
				"description": "update watermark table with nulls on column \"current_pipeline_id\"",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "get_landed_tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "altro_orchestration",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": {
								"value": "UPDATE [dbo].[watermark_table]\nSET current_pipeline_run_id = NULL\nWHERE current_pipeline_run_id = '@{pipeline().RunId}'",
								"type": "Expression"
							}
						}
					]
				}
			}
		],
		"folder": {
			"name": "0_master_pipelines"
		},
		"annotations": []
	}
}