{
	"name": "1_land_data_full",
	"properties": {
		"activities": [
			{
				"name": "land_data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "delete_existing_data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "SELECT \n  @{pipeline().parameters.InputSelectColumns}\n  FROM\n   @{concat(\n    pipeline().parameters.InputSourceName,\n    '.',\n    pipeline().parameters.InputSchemaName,\n    '.',\n    pipeline().parameters.InputTableName)\n    }\n   \n",
							"type": "Expression"
						},
						"queryTimeout": "00:05:00",
						"partitionOption": "None"
					},
					"enableStaging": false
				}
			},
			{
				"name": "delete_existing_data",
				"description": "Delete existing data in landing folder. so no fear of duplicate data on bronzing",
				"type": "Delete",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "update_wm_table",
				"description": "update watermark table with successfully landed table.",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "land_data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "\nUPDATE [dbo].[WatermarkTable]\n\nSET  [Last_PipelineRunID] = '@{pipeline().parameters.PipelineRunID}'\n\n\nWHERE SourceDBName = '@{pipeline().parameters.InputSourceName}'\nAND SchemaName = '@{pipeline().parameters.InputSchemaName}'\nAND TableName = '@{pipeline().parameters.InputTableName}'",
								"type": "Expression"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"InputSourceName": {
				"type": "string"
			},
			"InputSchemaName": {
				"type": "string"
			},
			"InputTableName": {
				"type": "string"
			},
			"InputSelectColumns": {
				"type": "string"
			},
			"PipelineRunID": {
				"type": "string"
			},
			"InputSourceSQLKeyVaultConnectionString": {
				"type": "string"
			}
		},
		"folder": {
			"name": "1_Landing/10_General_Landing"
		},
		"annotations": []
	}
}